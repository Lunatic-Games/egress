[gd_scene load_steps=12 format=2]

[ext_resource path="res://menus/egress_queue/egress_queue.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://assets/ui/VT323-Regular.ttf" type="DynamicFontData" id=3]
[ext_resource path="res://programs/Breakers/breaker1.tres" type="Resource" id=4]
[ext_resource path="res://shaders/program_shader.tscn" type="PackedScene" id=5]

[sub_resource type="DynamicFont" id=1]
size = 32
font_data = ExtResource( 3 )

[sub_resource type="DynamicFont" id=2]
size = 96
font_data = ExtResource( 3 )

[sub_resource type="Animation" id=3]
tracks/0/type = "value"
tracks/0/path = NodePath("Attacker:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -150, 153 ), Vector2( 149.6, 153 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attacker/AttackerSprite:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attacker/AttackerName:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=4]
tracks/0/type = "value"
tracks/0/path = NodePath("Defender:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 578.5, 163 ), Vector2( 442.088, 153 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Defender/DefenderSprite:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=5]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("AccessGranted:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.5, 0.7, 0.9, 1.1, 1.6, 1.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.784314 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.784314 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Attacker/AttackerSprite:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attacker/AttackerName:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=6]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("AccessDenied:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.5, 0.7, 0.9, 1.1, 1.6, 1.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.784314 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.784314 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Defender/DefenderSprite:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Attacker/AttackerName:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[node name="EgressQueue" type="ColorRect" groups=[
"egress",
]]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 609.0
margin_bottom = -303.0
color = Color( 1, 1, 1, 0 )
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
attackers = [ ExtResource( 4 ) ]

[node name="DefenderAttackTimer" type="Timer" parent="."]

[node name="AttackerAttackTimer" type="Timer" parent="."]

[node name="Defender" type="Node2D" parent="."]
position = Vector2( 442.088, 153 )

[node name="DefenderSprite_old" type="Sprite" parent="Defender"]
visible = false
modulate = Color( 0.345098, 0.819608, 0.929412, 1 )
scale = Vector2( 1e-05, 1e-05 )
texture = ExtResource( 2 )

[node name="DefenderSprite" parent="Defender" instance=ExtResource( 5 )]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -126.0
margin_top = -126.0
margin_right = 124.0
margin_bottom = 124.0

[node name="Attacker" type="Node2D" parent="."]
position = Vector2( 149.6, 153 )

[node name="AttackerSprite_old" type="Sprite" parent="Attacker"]
visible = false
modulate = Color( 0.670588, 0.160784, 0.160784, 1 )
scale = Vector2( 1e-05, 1e-05 )
texture = ExtResource( 2 )

[node name="AttackerSprite" parent="Attacker" instance=ExtResource( 5 )]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -125.086
margin_top = -127.086
margin_right = 124.914
margin_bottom = 122.914

[node name="AttackerName" type="RichTextLabel" parent="Attacker"]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -110.0
margin_top = 120.224
margin_right = 116.0
margin_bottom = 160.224
custom_fonts/normal_font = SubResource( 1 )
bbcode_enabled = true
bbcode_text = "[center][shake]Borus"
text = "Borus"
fit_content_height = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AccessDenied" type="RichTextLabel" parent="."]
modulate = Color( 0.619608, 0.14902, 0.14902, 1 )
self_modulate = Color( 1, 1, 1, 0 )
margin_left = 83.9053
margin_top = 34.4611
margin_right = 351.905
margin_bottom = 230.461
custom_fonts/normal_font = SubResource( 2 )
bbcode_enabled = true
bbcode_text = "[center][shake]ACCESS DENIED[/shake]"
text = "ACCESS DENIED"
fit_content_height = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AccessGranted" type="RichTextLabel" parent="."]
modulate = Color( 0.25098, 0.878431, 0.196078, 1 )
self_modulate = Color( 1, 1, 1, 0 )
margin_left = 83.9053
margin_top = 34.4611
margin_right = 351.905
margin_bottom = 230.461
custom_fonts/normal_font = SubResource( 2 )
bbcode_enabled = true
bbcode_text = "[center][shake]ACCESS GRANTED[/shake]"
text = "ACCESS GRANTED"
fit_content_height = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AttackerAnimator" type="AnimationPlayer" parent="."]
anims/load_program = SubResource( 3 )

[node name="DefenderAnimator" type="AnimationPlayer" parent="."]
anims/load_program = SubResource( 4 )

[node name="HackSuccessful" type="AnimationPlayer" parent="."]
anims/hack_success = SubResource( 5 )

[node name="HackFailed" type="AnimationPlayer" parent="."]
anims/hack_failed = SubResource( 6 )

[connection signal="timeout" from="DefenderAttackTimer" to="." method="_on_DefenderAttackTimer_timeout"]
[connection signal="timeout" from="AttackerAttackTimer" to="." method="_on_AttackerAttackTimer_timeout"]
[connection signal="animation_finished" from="HackSuccessful" to="." method="_on_HackSuccessful_animation_finished"]
[connection signal="animation_finished" from="HackFailed" to="." method="_on_HackFailed_animation_finished"]
